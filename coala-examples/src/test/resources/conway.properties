# $Id$
# $URL: https://dev.almende.com/svn/abms/coala-examples/src/test/resources/conway.properties $
#
################################################################################
#                                                                              #
#        TEST properties for the Basic Agent Abstraction Layer (BAAL)          #
#                                                                              #
################################################################################

binderFactoryType = io.coala.guice.GuiceBinderFactory
#defaultAgentType = com.almende.agent.example.conway.BasicCell
#bootAgentNames=[]
singletonServiceTypes = {\
	"io.coala.example.conway.CellWorld$Factory":"io.coala.example.conway.CellWorldLattice",\
	\
	"com.almende.coala.service.booter.BooterService$Factory":"com.almende.coala.eve.EveBooterService",\
	"com.almende.coala.service.finalizer.FinalizerService$Factory":"com.almende.coala.eve.EveFinalizerService",\
	"com.almende.coala.service.messenger.MessengerService$Factory":"com.almende.coala.eve.EveMessengerService",\
	"com.almende.coala.service.messenger.ProxyService$Factory":"com.almende.coala.eve.EveProxyService",\
	"com.almende.coala.service.messenger.ReceiverService$Factory":"com.almende.coala.service.messenger.BasicReceiverService",\
	"com.almende.coala.service.scheduler.SimulatorService$Factory":"com.almende.coala.service.scheduler.BasicSimulatorService",\
	"com.almende.coala.service.configurer.ConfigurerService$Factory":"com.almende.coala.service.configurer.BasicConfigurerService"\
}

# domain specific services and factories

#modelName = testModel

initialStates=[\
	[0,1,0],\
	[0,1,0],\
	[0,1,0] \
]
	
cycleDuration=1
